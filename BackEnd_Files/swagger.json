{
	"openapi": "3.0.0",
	"info": {
		"title": "Let's API",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"host": "localhost:3000",
	"basePath": "/",
	"tags": [
		{
			"name": "Auth",
			"description": "Auth CRUD"
		},
		{
			"name": "Users",
			"description": "Users CRUD"
		},
		{
			"name": "User Configuration",
			"description": "User's Configuration CRUD"
		},
		{
			"name": "User Location",
			"description": "User's Location CRUD"
		},
		{
			"name": "User Pictures",
			"description": "User's Pictures CRUD"
		},
		{
			"name": "Device Token",
			"description": "User's Device Token CRUD"
		},
		{
			"name": "User's Status",
			"description": "User's Status CRUD"
		},
		{
			"name": "Notifications",
			"description": "Notifications CRUD"
		},
		{
			"name": "Connections",
			"description": "Connections CRUD"
		},
		{
			"name": "Chats",
			"description": "Chats CRUD"
		},
		{
			"name": "Messages",
			"description": "Chat's Messages CRUD"
		},
		{
			"name": "Filters",
			"description": "User's Filters CRUD"
		}
	],
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {
			"userid": {
				"description": "A uniq identify for a user",
				"type": "number",
				"format": "integer"
			},
			"onlyOnline": {
				"description": "Sign from the client.\n0 = return online and offline users\n1 = return only online users",
				"type": "number",
				"format": "boolean"
			}
		},
		"requestBodies": {
			"filters_Request_Body": {
				"properties": {
					"search_mode_filter": {
						"type": "string"
					},
					"hobbies_filter": {
						"type": "string"
					},
					"gender_filter": {
						"type": "string"
					},
					"relationship_filter": {
						"type": "string"
					},
					"interested_in_filter": {
						"type": "string"
					},
					"age_filter": {
						"type": "array",
						"items": {
							"type": "number",
							"format": "integer"
						}
					},
					"radius_filter": {
						"type": "number",
						"format": "integer"
					},
					"friends_only_filter": {
						"type": "number",
						"format": "boolean"
					}
				},
				"required": [
					"search_mode_filter",
					"hobbies_filter",
					"gender_filter",
					"relationship_filter",
					"interested_in_filter",
					"age_filter",
					"radius_filter",
					"friends_only_filter"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"responses": {
			"Get_UserConfigurationResponse": {
				"properties": {
					"user_id": {
						"type": "number",
						"format": "integer"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string",
						"description": "Date of birth",
						"example": "2017-01-01",
						"format": "date",
						"pattern": "YYYY-MM-DD",
						"minLength": 0,
						"maxLength": 10
					},
					"city": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"phone_number": {
						"type": "string"
					},
					"registration_date": {
						"type": "string",
						"description": "Registration date",
						"example": "2017-01-01",
						"format": "date",
						"pattern": "YYYY-MM-DD",
						"minLength": 0,
						"maxLength": 10
					},
					"relationship_status": {
						"type": "string"
					},
					"sexual_orientation": {
						"type": "string"
					},
					"profession": {
						"type": "string"
					},
					"pronoun": {
						"type": "string"
					},
					"hobbies": {
						"type": "string"
					},
					"age": {
						"type": "number",
						"format": "integer"
					},
					"image": {
						"type": "string"
					},
					"search_mode": {
						"type": "string"
					},
					"distance": {
						"type": "number",
						"format": "integer"
					},
					"online": {
						"type": "number",
						"format": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Post_FiltersResponse": {
				"properties": {
					"name": "Suitable users' configuration",
					"schema": {
						"$ref": "#/components/responses/Get_UserConfigurationResponse"
					}
				},
				"type": "array",
				"additionalProperties": false
			},
			"Error": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"msg": {
						"type": "string"
					}
				},
				"required": ["code", "msg"],
				"type": "object",
				"additionalProperties": false
			}
		},
		"schemas": {},
		"securitySchemes": {}
	},
	"paths": {
		"/filters/{userid}/{onlyOnline}": {
			"post": {
				"operationId": "HandlePost",
				"description": "Create or update user's filters",
				"tags": ["Filters"],
				"parameters": [
					{
						"required": true,
						"name": "user id",
						"schema": {
							"$ref": "#/components/parameters/userid"
						}
					},
					{
						"required": true,
						"name": "online only",
						"schema": {
							"$ref": "#/components/parameters/onlyOnline"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/requestBodies/filters_Request_Body"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Ok --> There are suitable users by the chosen filters to display.\nReturn an array of these users' configuration",
						"name": "There are suitable users by the chosen filters to display.\nReturn an array of these users' configuration",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Get_UserConfigurationResponse"
								}
							}
						}
					},
					"201": {
						"description": "Ok --> There aren't suitable users by the chosen filters to display.",
						"content": {
							"application/json": {
								"schema": {
									"message": "There are no suitable users to display"
								}
							}
						}
					},
					"500": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Error"
								}
							}
						}
					}
				}
			}
		},
		"/get-example": {
			"get": {
				"operationId": "HandleGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Error"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Error"
								}
							}
						}
					}
				},
				"tags": ["Basic"],
				"security": [],
				"parameters": []
			}
		},
		"/post-example": {
			"post": {
				"operationId": "HandlePost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Error"
								}
							}
						}
					},
					"500": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/Error"
								}
							}
						}
					}
				},
				"tags": ["Users"],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/responses/Error"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/swagger-api"
		}
	]
}
